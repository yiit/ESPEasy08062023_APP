; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = Firmware for ESP82xx/ESP32/ESP32-S2/ESP32-S3/ESP32-C3 for easy IoT deployment of sensors.
boards_dir = boards
lib_dir = lib
extra_configs = 
	platformio_core_defs.ini
	platformio_esp82xx_base.ini
	platformio_esp82xx_envs.ini
	platformio_esp32_envs.ini
	platformio_esp32_solo1.ini
	platformio_esp32c3_envs.ini
	platformio_esp32s2_envs.ini
	platformio_esp32s3_envs.ini
	platformio_special_envs.ini
default_envs = max_ESP32_16M8M_LittleFS

[compiler_warnings]
build_flags = -Wall -Wno-parentheses -fdiagnostics-show-option

[minimal_size]
build_flags = 
	-Os
	-ffunction-sections
	-fdata-sections
	-Wl,--gc-sections
	-s

[espota]
upload_protocol = espota
upload_flags_esp8266 = 
	--port=18266
upload_flags_esp32 = 
	--port=3232
build_flags = -DFEATURE_ARDUINO_OTA=1
upload_port = 192.168.1.152

[debug_flags]
build_flags = 

[mqtt_flags]
build_flags = -DMQTT_MAX_PACKET_SIZE=1024

[extra_scripts_default]
extra_scripts = pre:tools/pio/set-ci-defines.py
	pre:tools/pio/generate-compiletime-defines.py
	tools/pio/copy_files.py

[extra_scripts_esp8266]
extra_scripts = tools/pio/gzip-firmware.py
	pre:tools/pio/concat_cpp_files.py
	post:tools/pio/remove_concat_cpp_files.py
	${extra_scripts_default.extra_scripts}

[common]
lib_archive = false
lib_ldf_mode = chain
lib_compat_mode = strict
shared_libdeps_dir = lib
framework = arduino
upload_speed = 921600
monitor_speed = 115200
targets = 
src_filter = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<*/Commands_tmp/> -<*/ControllerQueue_tmp/> -<*/DataStructs_tmp/> -<*/DataTypes_tmp/>  -<*/ESPEasyCore_tmp/>  -<*/Globals_tmp/> -<*/Helpers_tmp/> -<*/PluginStructs_tmp/>  -<*/WebServer_tmp/>

[env]
extends = common

[esp82xx_defaults]
build_flags = -D NDEBUG
	-lstdc++ -lsupc++
	-mtarget-align
	-DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
	-DVTABLES_IN_FLASH
	-DPUYA_SUPPORT=1
	-fno-strict-aliasing
	-I$PROJECT_DIR/src/include
	-include "ESPEasy_config.h"
lib_ignore = ESP32_ping
	ESP32WebServer
	ESP32HTTPUpdateServer
	ServoESP32
	IRremoteESP8266
	HeatpumpIR
	TinyWireM
	LittleFS(esp8266)
	I2C AXP192 Power management

[esp82xx_2_5_x]
build_flags = -DNDEBUG
	-mtarget-align
	-DVTABLES_IN_FLASH
	-fno-exceptions
	-lstdc++
	-DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
	-DPUYA_SUPPORT=1
	-DCORE_POST_2_5_0
	-fno-strict-aliasing
	-DLIBRARIES_NO_LOG=1
	-I$PROJECT_DIR/src/include
	-include "ESPEasy_config.h"
lib_ignore = ${esp82xx_defaults.lib_ignore}

[esp82xx_2_6_x]
build_flags = ${esp82xx_2_5_x.build_flags}
	-Os
	-s
	-DBEARSSL_SSL_BASIC
	-DCORE_POST_2_6_0
	-DPSTR_ALIGN=1
	-Werror=return-type
lib_ignore = ${esp82xx_defaults.lib_ignore}

[esp82xx_3_0_x]
build_flags = ${esp82xx_2_6_x.build_flags}
	-DCORE_POST_3_0_0
	-Wno-deprecated-declarations
lib_ignore = ${esp82xx_defaults.lib_ignore}

[core_2_7_4]
extends = esp82xx_2_6_x
platform = espressif8266@2.6.3
platform_packages = 
	framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git#2.7.4
build_flags = ${esp82xx_2_6_x.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
	-DUSES_LATEST_SOFTWARE_SERIAL_LIBRARY=0
	-Wno-deprecated-declarations
lib_ignore = ${esp82xx_defaults.lib_ignore}
	IRremoteESP8266
	HeatpumpIR
	LittleFS(esp8266)
	ServoESP32
	TinyWireM
	EspSoftwareSerial

[core_2_7_4_alt_wifi]
extends = esp82xx_2_6_x
platform = espressif8266@2.6.3
platform_packages = 
	framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git#2.7.4
build_flags = ${esp82xx_2_6_x.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190313
	-DUSES_LATEST_SOFTWARE_SERIAL_LIBRARY=0
	-Wno-deprecated-declarations
lib_ignore = ${esp82xx_defaults.lib_ignore}
	IRremoteESP8266
	HeatpumpIR
	LittleFS(esp8266)
	ServoESP32
	TinyWireM
	EspSoftwareSerial

[core_4_1_0]
extends = esp82xx_3_0_x
platform = espressif8266@4.1.0
platform_packages = 
build_flags = ${esp82xx_3_0_x.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
	-DUSES_LATEST_SOFTWARE_SERIAL_LIBRARY=1
	-DLIBRARIES_NO_LOG=1
lib_ignore = ${esp82xx_defaults.lib_ignore}
	IRremoteESP8266
	HeatpumpIR
	LittleFS(esp8266)
	ServoESP32
	TinyWireM

[core_stage_2ndheap]
extends = esp82xx_3_0_x
platform = espressif8266@4.1.0
build_flags = ${esp82xx_3_0_x.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
	-DPIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED
	-DUSE_SECOND_HEAP
	-DPHASE_LOCKED_WAVEFORM
platform_packages = 

[core_stage]
extends = esp82xx_3_0_x
platform = https://github.com/platformio/platform-espressif8266.git
platform_packages = 
build_flags = ${esp82xx_3_0_x.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
	-DUSES_LATEST_SOFTWARE_SERIAL_LIBRARY=1
	-DPHASE_LOCKED_WAVEFORM

[core_esp32_IDF4_4__2_0_9]
platform = https://github.com/tasmota/platform-espressif32/releases/download/2023.06.04/platform-espressif32.zip
platform_packages = 
build_flags = -DESP32_STAGE
	-DESP_IDF_VERSION_MAJOR=4
	-DMUSTFIX_CLIENT_TIMEOUT_IN_SECONDS
	-DLIBRARIES_NO_LOG=1
	-DDISABLE_SC16IS752_SPI
	-DCONFIG_PM_ENABLE
	-DCONFIG_FREERTOS_USE_TICKLESS_IDLE=1
	-DCONFIG_FREERTOS_IDLE_TIME_BEFORE_SLEEP=3
	-I$PROJECT_DIR/src/include
	
	
	-include "sdkconfig.h"
	-include "ESPEasy_config.h"
	-include "esp32x_fixes.h"

[regular_platform]
build_flags = ${core_2_7_4.build_flags}
platform = ${core_2_7_4.platform}
platform_packages = ${core_2_7_4.platform_packages}
lib_ignore = ${core_2_7_4.lib_ignore}

[regular_platform_alt_wifi]
build_flags = ${core_2_7_4_alt_wifi.build_flags}
platform = ${core_2_7_4_alt_wifi.platform}
platform_packages = ${core_2_7_4_alt_wifi.platform_packages}
lib_ignore = ${core_2_7_4_alt_wifi.lib_ignore}

[core302_platform]
build_flags = ${core_stage.build_flags}
platform = ${core_stage.platform}
platform_packages = ${core_stage.platform_packages}
lib_ignore = ${core_stage.lib_ignore}

[beta_platform_2ndheap]
build_flags = ${core_stage_2ndheap.build_flags}
platform = ${core_stage_2ndheap.platform}
platform_packages = ${core_stage_2ndheap.platform_packages}
lib_ignore = ${core_stage_2ndheap.lib_ignore}

[beta_platform]
build_flags = ${core_stage.build_flags}
platform = ${core_stage.platform}
platform_packages = ${core_stage.platform_packages}
lib_ignore = ${core_stage.lib_ignore}

[no_ir]
lib_ignore = IRremoteESP8266
	HeatpumpIR

[no_sd]
lib_ignore = ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)

[no_littlefs]
lib_ignore = LittleFS(esp8266)

[generic_build]
lib_ignore = ${no_ir.lib_ignore}
	${no_sd.lib_ignore}
	${no_littlefs.lib_ignore}

[esp82xx_common]
lib_archive = ${common.lib_archive}
framework = ${common.framework}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
targets = ${common.targets}
build_flags = ${minimal_size.build_flags}
	${mqtt_flags.build_flags}
	-DHTTPCLIENT_1_1_COMPATIBLE=0
build_unflags = -DDEBUG_ESP_PORT
	-fexceptions
lib_ignore = ${esp82xx_defaults.lib_ignore}
	IRremoteESP8266
	HeatpumpIR
	ServoESP32
	TinyWireM
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
	I2C AXP192 Power management
monitor_filters = esp8266_exception_decoder
extra_scripts = pre:tools/pio/pre_default_check.py
	${extra_scripts_esp8266.extra_scripts}
src_filter = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<*/Commands/> -<*/ControllerQueue/> -<*/DataStructs/> -<*/DataTypes/> -<*/ESPEasyCore/> -<*/Globals/> -<*/Helpers/> -<*/PluginStructs/>  -<*/WebServer/>

[normal]
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
lib_ignore = ${regular_platform.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)

[normal_alt_wifi]
platform = ${regular_platform_alt_wifi.platform}
platform_packages = ${regular_platform_alt_wifi.platform_packages}
build_flags = ${regular_platform_alt_wifi.build_flags}
lib_ignore = ${regular_platform_alt_wifi.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)

[normal_beta]
platform = ${beta_platform.platform}
platform_packages = ${beta_platform.platform_packages}
build_flags = ${beta_platform.build_flags}
lib_ignore = ${beta_platform.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)

[collection]
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	-DPLUGIN_BUILD_COLLECTION
	-DLIMIT_BUILD_SIZE
	-DDISABLE_SC16IS752_Serial
lib_ignore = ${regular_platform.lib_ignore}
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)

[collection_alt_wifi]
platform = ${regular_platform_alt_wifi.platform}
platform_packages = ${regular_platform_alt_wifi.platform_packages}
build_flags = ${regular_platform_alt_wifi.build_flags}
	-DPLUGIN_BUILD_COLLECTION
	-DLIMIT_BUILD_SIZE
	-DDISABLE_SC16IS752_Serial
lib_ignore = ${regular_platform_alt_wifi.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)

[collection_beta]
platform = ${beta_platform.platform}
platform_packages = ${beta_platform.platform_packages}
build_flags = ${beta_platform.build_flags}
	-DPLUGIN_BUILD_COLLECTION
	-DLIMIT_BUILD_SIZE
	-DDISABLE_SC16IS752_Serial
lib_ignore = ${beta_platform.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)

[ir]
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
lib_ignore = ESP32_ping
	ESP32WebServer
	ServoESP32
	ESP32HTTPUpdateServer
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
	I2C AXP192 Power management

[ir_alt_wifi]
platform = ${regular_platform_alt_wifi.platform}
platform_packages = ${regular_platform_alt_wifi.platform_packages}
build_flags = ${regular_platform_alt_wifi.build_flags}
lib_ignore = ${ir.lib_ignore}

[minimal_ir]
extends = ir
build_flags = ${ir.build_flags}
	-DPLUGIN_BUILD_MINIMAL_IR

[minimal_ir_extended]
extends = ir
build_flags = ${ir.build_flags}
	-DPLUGIN_BUILD_MINIMAL_IRext

[normal_ir]
extends = ir
build_flags = ${ir.build_flags}
	-DPLUGIN_BUILD_NORMAL_IR

[normal_ir_extended]
extends = ir
build_flags = ${ir.build_flags}
	-DPLUGIN_BUILD_IR_EXTENDED

[normal_ir_extended_no_rx]
extends = ir
build_flags = ${ir.build_flags}
	-DPLUGIN_BUILD_IR_EXTENDED_NO_RX

[esp82xx_1M]
extends = esp82xx_common
build_flags = -DBUILD_NO_DEBUG
	-DFEATURE_SD=0
	-Os
	-s
	-DNO_GLOBAL_MDNS
	${esp82xx_common.build_flags}
extra_scripts = ${esp82xx_common.extra_scripts}
lib_ignore = ${esp82xx_common.lib_ignore}
	ESP8266SdFat
	SD
	SDFS
	SD(esp8266)
	LittleFS
	ArduinoOTA
	ESP8266mDNS

[esp8266_1M]
extends = esp82xx_1M
board = esp8266_1M128k
build_flags = ${esp82xx_1M.build_flags}
extra_scripts = ${esp82xx_1M.extra_scripts}
lib_ignore = ${esp82xx_1M.lib_ignore}

[esp8266_1M_OTA]
extends = esp82xx_1M
board = esp8266_1M128k_OTA
build_flags = ${esp82xx_1M.build_flags}
	-DPLUGIN_BUILD_MINIMAL_OTA
	-DDISABLE_SC16IS752_Serial
	-DFEATURE_GPIO_USE_ESP8266_WAVEFORM=0
lib_ignore = ${esp82xx_1M.lib_ignore}

[esp8266_2M256]
extends = esp82xx_common
board = esp8266_2M256
build_flags = ${esp82xx_common.build_flags}

[espWroom2M256]
extends = esp82xx_common
board_build.flash_mode = dout
board_upload.maximum_size = 1044464
board = esp_wroom_02
board_build.ldscript = eagle.flash.2m256.ld
build_flags = ${esp82xx_common.build_flags}

[esp8266_4M1M]
extends = esp82xx_common
board = esp8266_4M1M_board
build_flags = ${esp82xx_common.build_flags}
extra_scripts = ${esp82xx_common.extra_scripts}

[esp8266_4M2M]
extends = esp82xx_common
board = esp8266_4M2M_board
build_flags = ${esp82xx_common.build_flags}
extra_scripts = ${esp82xx_common.extra_scripts}

[esp8266_16M]
extends = esp82xx_common
board = esp8266_16M14M_board
build_flags = -DSPIFFS_MAX_OPEN_FILES=20
	${esp82xx_common.build_flags}

[limited_build_size]
build_flags = -DNO_GLOBAL_MDNS

[hard_esp82xx]
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	-DBUILD_NO_DEBUG
	-DPLUGIN_BUILD_CUSTOM

[esp8266_custom_common]
lib_ignore = ESP32_ping
	ESP32HTTPUpdateServer
	ESP32WebServer
	HeatpumpIR
	IRremoteESP8266
	ServoESP32
	I2C AXP192 Power management
extra_scripts = pre:tools/pio/pre_custom_esp82xx.py
	${extra_scripts_esp8266.extra_scripts}

[env:custom_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_IR_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
	-DPLUGIN_BUILD_IR
lib_ignore = ESP32_ping
	ESP32WebServer
	ServoESP32
	ESP32HTTPUpdateServer
	adafruit/Adafruit GFX Library@^1.11.1
	LOLIN_EPD
	Adafruit ILI9341 ESPEasy
	adafruit/Adafruit BusIO
	Adafruit NeoPixel
	Adafruit Motor Shield V2 Library
	Adafruit_ST77xx
	Adafruit NeoMatrix
	I2C AXP192 Power management
extra_scripts = pre:tools/pio/pre_custom_esp82xx_IR.py
	${extra_scripts_esp8266.extra_scripts}
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_alt_wifi_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform_alt_wifi.platform}
platform_packages = ${regular_platform_alt_wifi.platform_packages}
build_flags = ${regular_platform_alt_wifi.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_302_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${core302_platform.platform}
platform_packages = ${core302_platform.platform_packages}
build_flags = ${core302_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_beta_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${beta_platform.platform}
platform_packages = ${beta_platform.platform_packages}
build_flags = ${beta_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_beta_2ndheap_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${beta_platform_2ndheap.platform}
platform_packages = ${beta_platform_2ndheap.platform_packages}
build_flags = ${beta_platform_2ndheap.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_beta_IR_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${beta_platform.platform}
platform_packages = ${beta_platform.platform_packages}
build_flags = ${beta_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ESP32_ping
	ESP32WebServer
	ServoESP32
	ESP32HTTPUpdateServer
	adafruit/Adafruit GFX Library@^1.11.1
	LOLIN_EPD
	Adafruit ILI9341 ESPEasy
	adafruit/Adafruit BusIO
	Adafruit NeoPixel
	Adafruit Motor Shield V2 Library
	Adafruit_ST77xx
	Adafruit NeoMatrix
	I2C AXP192 Power management
extra_scripts = ${esp8266_custom_common.extra_scripts}
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_ESP8266_4M2M]
extends = esp8266_4M2M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_ESP8266_4M2M_LittleFS]
extends = esp8266_4M2M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_ESP8266_1M]
extends = esp8266_1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_alt_wifi_ESP8266_1M]
extends = esp8266_1M
platform = ${regular_platform_alt_wifi.platform}
platform_packages = ${regular_platform_alt_wifi.platform_packages}
build_flags = ${regular_platform_alt_wifi.build_flags}
	${esp8266_1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_beta_ESP8266_1M]
extends = esp8266_1M
platform = ${beta_platform.platform}
platform_packages = ${beta_platform.platform_packages}
build_flags = ${beta_platform.build_flags}
	${esp8266_1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:custom_ESP8266_2M256]
extends = espWroom2M256
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${espWroom2M256.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${esp8266_custom_common.lib_ignore}
extra_scripts = ${esp8266_custom_common.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_ESP8266_1M]
extends = esp8266_1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_1M.build_flags}
lib_ignore = ${regular_platform.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_ESP8266_1M_VCC]
extends = esp8266_1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_1M.build_flags}
	-D FEATURE_ADC_VCC=1
lib_ignore = ${regular_platform.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_alt_wifi_ESP8266_1M_VCC]
extends = esp8266_1M
platform = ${regular_platform_alt_wifi.platform}
platform_packages = ${regular_platform_alt_wifi.platform_packages}
build_flags = ${regular_platform_alt_wifi.build_flags}
	${esp8266_1M.build_flags}
	-D FEATURE_ADC_VCC=1
lib_ignore = ${regular_platform_alt_wifi.lib_ignore}
	ESP8266SdFat
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_WROOM02_2M256]
extends = espWroom2M256
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${espWroom2M256.build_flags}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_ESP8266_4M1M_VCC]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-D FEATURE_ADC_VCC=1
	-D NO_LIMIT_BUILD_SIZE
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_alt_wifi_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform_alt_wifi.platform}
platform_packages = ${regular_platform_alt_wifi.platform_packages}
build_flags = ${regular_platform_alt_wifi.build_flags}
	${esp8266_4M1M.build_flags}
lib_ignore = ${regular_platform_alt_wifi.lib_ignore}
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_302_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${core302_platform.platform}
platform_packages = ${core302_platform.platform_packages}
build_flags = ${core302_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-DBUILD_NO_DEBUG
lib_ignore = ${core302_platform.lib_ignore}
	SD
	SDFS
	LittleFS(esp8266)
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_beta_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${normal_beta.platform}
platform_packages = ${normal_beta.platform_packages}
build_flags = ${normal_beta.build_flags}
	${esp8266_4M1M.build_flags}
	-DBUILD_NO_DEBUG
lib_ignore = ${normal_beta.lib_ignore}
	SD
	SDFS
	LittleFS(esp8266)
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_beta_ESP8266_16M_LittleFS]
extends = esp8266_16M
platform = ${normal_beta.platform}
platform_packages = ${normal_beta.platform_packages}
build_flags = ${normal_beta.build_flags}
	${esp8266_16M.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22y
lib_ignore = ESP32_ping
	ESP32WebServer
	ServoESP32
	ESP32HTTPUpdateServer
	IRremoteESP8266
	HeatpumpIR
	SD
	SDFS
	I2C AXP192 Power management
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[minimal_OTA_domoticz]
build_flags = ${esp8266_1M_OTA.build_flags}
	-DFEATURE_DOMOTICZ=1

[minimal_OTA_domoticz_MQTT]
build_flags = ${esp8266_1M_OTA.build_flags}
	-DFEATURE_DOMOTICZ=1
	-DFEATURE_NO_HTTP_CLIENT=1

[minimal_OTA_FHEM_HA]
build_flags = ${esp8266_1M_OTA.build_flags}
	-DFEATURE_FHEM=1
	-DFEATURE_HOMEASSISTANT_OPENHAB=1

[env:minimal_core_274_ESP8266_1M_OTA_Domoticz]
extends = esp8266_1M_OTA
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${minimal_OTA_domoticz.build_flags}
	-DDISABLE_SC16IS752_Serial
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:minimal_core_274_ESP8266_1M_OTA_Domoticz_MQTT]
extends = esp8266_1M_OTA
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${minimal_OTA_domoticz_MQTT.build_flags}
	-DDISABLE_SC16IS752_Serial
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:minimal_core_302_ESP8266_1M_OTA_Domoticz]
extends = esp8266_1M_OTA
platform = ${core302_platform.platform}
platform_packages = ${core302_platform.platform_packages}
build_flags = ${core302_platform.build_flags}
	${minimal_OTA_domoticz.build_flags}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:minimal_core_302_ESP8266_1M_OTA_Domoticz_MQTT]
extends = esp8266_1M_OTA
platform = ${core302_platform.platform}
platform_packages = ${core302_platform.platform_packages}
build_flags = ${core302_platform.build_flags}
	${minimal_OTA_domoticz_MQTT.build_flags}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:minimal_core_274_ESP8266_1M_OTA_FHEM_HA]
extends = esp8266_1M_OTA
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${minimal_OTA_FHEM_HA.build_flags}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:minimal_core_302_ESP8266_1M_OTA_FHEM_HA]
extends = esp8266_1M_OTA
platform = ${core302_platform.platform}
platform_packages = ${core302_platform.platform_packages}
build_flags = ${core302_platform.build_flags}
	${minimal_OTA_FHEM_HA.build_flags}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:minimal_IRext_ESP8266_1M]
extends = esp8266_1M
platform = ${ir.platform}
platform_packages = ${ir.platform_packages}
lib_ignore = ${ir.lib_ignore}
build_flags = ${minimal_ir_extended.build_flags}
	${esp8266_1M.build_flags}
build_unflags = ${esp8266_1M_OTA.build_unflags} -DPLUGIN_BUILD_NORMAL_IR
extra_scripts = ${esp8266_1M.extra_scripts}
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:minimal_IRext_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${ir.platform}
platform_packages = ${ir.platform_packages}
lib_ignore = ${ir.lib_ignore}
build_flags = ${minimal_ir_extended.build_flags}
	${esp8266_4M1M.build_flags}
extra_scripts = ${esp8266_4M1M.extra_scripts}
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:minimal_IRext_ESP8266_4M2M]
extends = esp8266_4M2M
platform = ${ir.platform}
platform_packages = ${ir.platform_packages}
lib_ignore = ${ir.lib_ignore}
build_flags = ${minimal_ir_extended.build_flags}
	${esp8266_4M2M.build_flags}
extra_scripts = ${esp8266_4M2M.extra_scripts}
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:normal_IRext_no_rx_ESP8266_4M2M]
extends = esp8266_4M2M
platform = ${ir.platform}
platform_packages = ${ir.platform_packages}
lib_ignore = ${ir.lib_ignore}
build_flags = ${normal_ir_extended_no_rx.build_flags}
	${esp8266_4M2M.build_flags}
	${limited_build_size.build_flags}
	-DLIMIT_BUILD_SIZE
	-DKEEP_RTTTL
extra_scripts = ${esp8266_4M2M.extra_scripts}
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[collection_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${collection.platform}
platform_packages = ${collection.platform_packages}
build_flags = ${collection.build_flags}
	${esp8266_4M1M.build_flags}
	${limited_build_size.build_flags}

[collection_alt_wifi_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${collection_alt_wifi.platform}
platform_packages = ${collection_alt_wifi.platform_packages}
build_flags = ${collection_alt_wifi.build_flags}
	${esp8266_4M1M.build_flags}

[collection_beta_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${collection_beta.platform}
platform_packages = ${collection_beta.platform_packages}
build_flags = ${collection_beta.build_flags}
	${esp8266_4M1M.build_flags}

[collection_beta_ESP8266_16M_LittleFS]
extends = esp8266_16M
platform = ${collection_beta.platform}
platform_packages = ${collection_beta.platform_packages}
build_flags = ${collection_beta.build_flags}
	${esp8266_16M.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22y
board_build.filesystem = littlefs
lib_ignore = ESP32_ping
	ESP32WebServer
	ServoESP32
	ESP32HTTPUpdateServer
	IRremoteESP8266
	HeatpumpIR

[env:collection_A_ESP8266_4M1M]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:collection_B_ESP8266_4M1M]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DPLUGIN_BUILD_COLLECTION_B
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:collection_C_ESP8266_4M1M]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DPLUGIN_BUILD_COLLECTION_C
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:collection_D_ESP8266_4M1M]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DPLUGIN_BUILD_COLLECTION_D
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:collection_E_ESP8266_4M1M]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DPLUGIN_BUILD_COLLECTION_E
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:collection_F_ESP8266_4M1M]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DPLUGIN_BUILD_COLLECTION_F
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:collection_A_ESP8266_4M1M_VCC]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DFEATURE_ADC_VCC=1
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	h2zero/NimBLE-Arduino@^2.3.4
	4-20ma/ModbusMaster@^2.0.1

[env:collection_B_ESP8266_4M1M_VCC]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DFEATURE_ADC_VCC=1
	-DPLUGIN_BUILD_COLLECTION_B
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:collection_C_ESP8266_4M1M_VCC]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DFEATURE_ADC_VCC=1
	-DPLUGIN_BUILD_COLLECTION_C
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:collection_D_ESP8266_4M1M_VCC]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DFEATURE_ADC_VCC=1
	-DPLUGIN_BUILD_COLLECTION_D
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:collection_E_ESP8266_4M1M_VCC]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DFEATURE_ADC_VCC=1
	-DPLUGIN_BUILD_COLLECTION_E
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:collection_F_ESP8266_4M1M_VCC]
extends = collection_ESP8266_4M1M
build_flags = ${collection_ESP8266_4M1M.build_flags}
	-DFEATURE_ADC_VCC=1
	-DPLUGIN_BUILD_COLLECTION_F
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:energy_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-D PLUGIN_ENERGY_COLLECTION
	-D WEBSERVER_USE_CDN_JS_CSS
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:display_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-D PLUGIN_DISPLAY_COLLECTION
	-D WEBSERVER_USE_CDN_JS_CSS
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:climate_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-D PLUGIN_CLIMATE_COLLECTION
	-D WEBSERVER_USE_CDN_JS_CSS
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:neopixel_ESP8266_4M1M]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_4M1M.build_flags}
	-D PLUGIN_NEOPIXEL_COLLECTION
	-D LIMIT_BUILD_SIZE
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:neopixel_ESP8266_1M_Domoticz]
extends = esp8266_1M_OTA
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_1M_OTA.build_flags}
	${minimal_OTA_domoticz.build_flags}
	-D PLUGIN_NEOPIXEL_COLLECTION
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1

[env:neopixel_ESP8266_1M_FHEM_HA]
extends = esp8266_1M_OTA
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${esp8266_1M_OTA.build_flags}
	${minimal_OTA_FHEM_HA.build_flags}
	-D PLUGIN_NEOPIXEL_COLLECTION
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:hard_SONOFF_POW_4M1M]
extends = esp8266_4M1M
platform = ${hard_esp82xx.platform}
platform_packages = ${hard_esp82xx.platform_packages}
build_flags = ${hard_esp82xx.build_flags}
	${esp8266_4M1M.build_flags}
	-D PLUGIN_SET_SONOFF_POW
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:hard_other_POW_ESP8285_1M]
extends = esp8266_1M_OTA
platform = ${hard_esp82xx.platform}
platform_packages = ${hard_esp82xx.platform_packages}
build_flags = ${hard_esp82xx.build_flags}
	${esp8266_1M_OTA.build_flags}
	-D PLUGIN_SET_SONOFF_POW
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:hard_Shelly_1_2M256]
extends = esp8266_2M256
platform = ${hard_esp82xx.platform}
platform_packages = ${hard_esp82xx.platform_packages}
build_flags = ${hard_esp82xx.build_flags}
	${esp8266_2M256.build_flags}
	-D PLUGIN_SET_SHELLY_1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:hard_Shelly_PLUG_S_2M256]
extends = esp8266_2M256
platform = ${hard_esp82xx.platform}
platform_packages = ${hard_esp82xx.platform_packages}
build_flags = ${hard_esp82xx.build_flags}
	${esp8266_2M256.build_flags}
	-D PLUGIN_SET_SHELLY_PLUG_S
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:hard_Ventus_W266_1M]
extends = esp8266_1M
platform = ${hard_esp82xx.platform}
platform_packages = ${hard_esp82xx.platform_packages}
build_flags = ${hard_esp82xx.build_flags}
	${esp8266_1M_OTA.build_flags}
	-D PLUGIN_SET_VENTUS_W266
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:hard_LCtech_relay_x2_1M]
extends = esp8266_1M
platform = ${hard_esp82xx.platform}
platform_packages = ${hard_esp82xx.platform_packages}
build_flags = ${hard_esp82xx.build_flags}
	${esp8266_1M.build_flags}
	-D PLUGIN_SET_LC_TECH_RELAY_X2
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[esp32_always]
lib_ignore = ESP8266Ping
	ESP8266HTTPUpdateServer
	ESP8266WiFi
	ESP8266WebServer
	ESP8266mDNS
	ESPEasy_ESP8266Ping
	RABurton ESP8266 Mutex
	TinyWireM
	LittleFS_esp32

[esp32_base]
extends = common, core_esp32_IDF4_4__2_0_9
upload_speed = 921600
upload_before_reset = default_reset
upload_after_reset = hard_reset
extra_scripts = post:tools/pio/post_esp32.py
	${extra_scripts_default.extra_scripts}
build_unflags = -Wall
build_flags = ${core_esp32_IDF4_4__2_0_9.build_flags}
	-DMQTT_MAX_PACKET_SIZE=2048
	-DCONFIG_FREERTOS_ASSERT_DISABLE
	-DCONFIG_LWIP_ESP_GRATUITOUS_ARP
	-fno-strict-aliasing
	-Wswitch
	-DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_NONE
monitor_filters = esp32_exception_decoder

[esp32_common]
extends = esp32_base
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
	IRremoteESP8266
	HeatpumpIR
	ESP32 BLE Arduino
build_flags = ${esp32_base.build_flags}
	-DESP32_CLASSIC
extra_scripts = ${esp32_base.extra_scripts}
build_unflags = ${esp32_base.build_unflags}
	-fexceptions

[esp32_common_LittleFS]
extends = esp32_common
build_flags = ${esp32_common.build_flags}
	-DUSE_LITTLEFS
extra_scripts = ${esp32_common.extra_scripts}
board_build.filesystem = littlefs

[esp32_IRExt]
extends = esp32_common
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_BUILD_NORMAL_IRext
	-DCOLLECTION_USE_RTTTL
extra_scripts = ${esp32_common.extra_scripts}
	pre:tools/pio/ir_build_check.py

[esp32_custom_base]
extends = esp32_common
build_flags = ${esp32_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
extra_scripts = ${esp32_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py

[esp32_custom_base_LittleFS]
extends = esp32_common_LittleFS
build_flags = ${esp32_common_LittleFS.build_flags}
	-DPLUGIN_BUILD_CUSTOM
extra_scripts = ${esp32_common_LittleFS.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py

[env:custom_ESP32_4M316k]
extends = esp32_custom_base
board = esp32_4M
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1
	h2zero/NimBLE-Arduino@^1.4.1

[env:custom_ESP32_4M316k_LittleFS]
extends = esp32_custom_base_LittleFS
board = esp32_4M
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	
	h2zero/NimBLE-Arduino@^1.4.1

[env:custom_ESP32_16M8M_LittleFS]
extends = esp32_custom_base_LittleFS
board = esp32_16M8M
board_upload.flash_size = 16MB
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:custom_IR_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
	-DPLUGIN_BUILD_IR
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
extra_scripts = ${esp32_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32_IR.py
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:custom_ESP32_4M2M_NO_OTA_LittleFS]
extends = esp32_custom_base_LittleFS
board = esp32_4M
build_flags = ${esp32_custom_base_LittleFS.build_flags}
	-DNO_HTTP_UPDATER
board_build.partitions = esp32_partition_app1810k_spiffs2172k.csv
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:normal_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:normal_ESP32_4M316k_LittleFS]
extends = esp32_common_LittleFS
board = esp32_4M
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_A_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_SET_COLLECTION_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_B_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_SET_COLLECTION_B_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_C_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_SET_COLLECTION_C_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_D_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_SET_COLLECTION_D_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_E_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_SET_COLLECTION_E_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_F_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_SET_COLLECTION_F_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_A_ESP32_IRExt_4M316k]
extends = esp32_IRExt
board = esp32_4M
build_flags = ${esp32_IRExt.build_flags}
	-DPLUGIN_SET_COLLECTION_ESP32
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_B_ESP32_IRExt_4M316k]
extends = esp32_IRExt
board = esp32_4M
build_flags = ${esp32_IRExt.build_flags}
	-DPLUGIN_SET_COLLECTION_B_ESP32
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_C_ESP32_IRExt_4M316k]
extends = esp32_IRExt
board = esp32_4M
build_flags = ${esp32_IRExt.build_flags}
	-DPLUGIN_SET_COLLECTION_C_ESP32
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_D_ESP32_IRExt_4M316k]
extends = esp32_IRExt
board = esp32_4M
build_flags = ${esp32_IRExt.build_flags}
	-DPLUGIN_SET_COLLECTION_D_ESP32
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_E_ESP32_IRExt_4M316k]
extends = esp32_IRExt
board = esp32_4M
build_flags = ${esp32_IRExt.build_flags}
	-DPLUGIN_SET_COLLECTION_E_ESP32
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_F_ESP32_IRExt_4M316k]
extends = esp32_IRExt
board = esp32_4M
build_flags = ${esp32_IRExt.build_flags}
	-DPLUGIN_SET_COLLECTION_F_ESP32
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:energy_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_ENERGY_COLLECTION
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:display_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_DISPLAY_COLLECTION
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:climate_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_CLIMATE_COLLECTION
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:neopixel_ESP32_4M316k]
extends = esp32_common
board = esp32_4M
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DFEATURE_SD=1
	-D PLUGIN_NEOPIXEL_COLLECTION
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:custom_ESP32_4M316k_ETH]
extends = env:custom_ESP32_4M316k
build_flags = ${env:custom_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7
	4-20ma/ModbusMaster@^2.0.1
	h2zero/NimBLE-Arduino@^1.4.1

[env:custom_IR_ESP32_4M316k_ETH]
extends = env:custom_IR_ESP32_4M316k
build_flags = ${env:custom_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
extra_scripts = ${env:custom_ESP32_4M316k.extra_scripts}
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:custom_IR_ESP32_16M8M_LittleFS_ETH]
extends = esp32_common
board = esp32_16M8M
board_upload.flash_size = 16MB
build_flags = ${esp32_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
	-DPLUGIN_BUILD_IR
	-DFEATURE_ETHERNET=1
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
extra_scripts = ${esp32_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:normal_ESP32_4M316k_ETH]
extends = env:normal_ESP32_4M316k
build_flags = ${env:normal_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:normal_ESP32_IRExt_4M316k_ETH]
extends = esp32_IRExt
board = esp32_4M
build_flags = ${esp32_IRExt.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_A_ESP32_4M316k_ETH]
extends = env:collection_A_ESP32_4M316k
build_flags = ${env:collection_A_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_B_ESP32_4M316k_ETH]
extends = env:collection_B_ESP32_4M316k
build_flags = ${env:collection_B_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_C_ESP32_4M316k_ETH]
extends = env:collection_C_ESP32_4M316k
build_flags = ${env:collection_C_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_D_ESP32_4M316k_ETH]
extends = env:collection_D_ESP32_4M316k
build_flags = ${env:collection_D_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_E_ESP32_4M316k_ETH]
extends = env:collection_E_ESP32_4M316k
build_flags = ${env:collection_E_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_F_ESP32_4M316k_ETH]
extends = env:collection_F_ESP32_4M316k
build_flags = ${env:collection_F_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:energy_ESP32_4M316k_ETH]
extends = env:energy_ESP32_4M316k
build_flags = ${env:energy_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:display_ESP32_4M316k_ETH]
extends = env:display_ESP32_4M316k
build_flags = ${env:display_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:climate_ESP32_4M316k_ETH]
extends = env:climate_ESP32_4M316k
build_flags = ${env:climate_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:neopixel_ESP32_4M316k_ETH]
extends = env:neopixel_ESP32_4M316k
build_flags = ${env:neopixel_ESP32_4M316k.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:max_ESP32_16M1M]
extends = esp32_common
board = esp32_16M1M
board_upload.flash_size = 16MB
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
build_flags = ${esp32_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_BUILD_MAX_ESP32
	-DPLUGIN_BUILD_IR_EXTENDED
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:max_ESP32_16M1M_ETH]
extends = env:max_ESP32_16M1M
build_flags = ${env:max_ESP32_16M1M.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:max_ESP32_16M8M_LittleFS]
extends = esp32_common
board = esp32_16M8M
board_upload.flash_size = 16MB
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
build_flags = ${esp32_common.build_flags}
	-DUSE_LITTLEFS
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_BUILD_MAX_ESP32
	-DPLUGIN_BUILD_IR_EXTENDED
extra_scripts = ${esp32_common.extra_scripts}
board_build.filesystem = littlefs
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:max_ESP32_16M8M_LittleFS_ETH]
extends = env:max_ESP32_16M8M_LittleFS
board = ${env:max_ESP32_16M8M_LittleFS.board}
build_flags = ${env:max_ESP32_16M8M_LittleFS.build_flags}
	-DFEATURE_ETHERNET=1
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[esp32c3_common]
extends = esp32_base
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
	IRremoteESP8266
	HeatpumpIR
	ESP32 BLE Arduino
build_flags = ${esp32_base.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DESP32C3
extra_scripts = ${esp32_base.extra_scripts}
build_unflags = ${esp32_base.build_unflags}
	-fexceptions

[esp32c3_common_LittleFS]
extends = esp32c3_common
build_flags = ${esp32c3_common.build_flags}
	-DUSE_LITTLEFS
board_build.filesystem = littlefs

[env:custom_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
extra_scripts = ${esp32c3_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:neopixel_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DFEATURE_SD=1
	-DPLUGIN_NEOPIXEL_COLLECTION
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:custom_IR_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
	-DPLUGIN_BUILD_IR
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
extra_scripts = ${esp32c3_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py
	pre:tools/pio/ir_build_check.py
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:normal_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_A_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = 
	marian-craciunescu/ESP32Ping@^1.7

[env:collection_B_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_B_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7#

[env:collection_C_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_C_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_D_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_D_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_E_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_E_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_F_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_F_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:energy_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-D PLUGIN_ENERGY_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:display_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-D PLUGIN_DISPLAY_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:climate_ESP32c3_4M316k_CDC]
extends = esp32c3_common
board = esp32c3cdc
build_flags = ${esp32c3_common.build_flags}
	-D PLUGIN_CLIMATE_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[esp32s2_common]
extends = esp32_base
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
	IRremoteESP8266
	HeatpumpIR
	ESP32 BLE Arduino
build_flags = ${esp32_base.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DESP32S2
extra_scripts = ${esp32_base.extra_scripts}
build_unflags = ${esp32_base.build_unflags}
	-fexceptions

[esp32s2_common_LittleFS]
extends = esp32s2_common
build_flags = ${esp32s2_common.build_flags}
	-DUSE_LITTLEFS
board_build.filesystem = littlefs

[env:custom_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
	-DESP_CONSOLE_USB_CDC=y
extra_scripts = ${esp32s2_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:neopixel_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DFEATURE_SD=1
	-DPLUGIN_NEOPIXEL_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:custom_IR_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
	-DPLUGIN_BUILD_IR
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
extra_scripts = ${esp32s2_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py
	pre:tools/pio/ir_build_check.py
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:normal_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_A_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DPLUGIN_SET_COLLECTION_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_B_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DPLUGIN_SET_COLLECTION_B_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_C_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DPLUGIN_SET_COLLECTION_C_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_D_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DPLUGIN_SET_COLLECTION_D_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_E_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DPLUGIN_SET_COLLECTION_E_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_F_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-DPLUGIN_SET_COLLECTION_F_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:energy_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-D PLUGIN_ENERGY_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:display_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-D PLUGIN_DISPLAY_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:climate_ESP32s2_4M316k_CDC]
extends = esp32s2_common
board = esp32s2_cdc
build_flags = ${esp32s2_common.build_flags}
	-D PLUGIN_CLIMATE_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[esp32s3_common]
extends = esp32_base
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
	IRremoteESP8266
	HeatpumpIR
	ESP32 BLE Arduino
build_flags = ${esp32_base.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DESP32S3
extra_scripts = ${esp32_base.extra_scripts}
build_unflags = ${esp32_base.build_unflags}
	-fexceptions

[esp32s3_common_LittleFS]
extends = esp32s3_common
build_flags = ${esp32s3_common.build_flags}
	-DUSE_LITTLEFS
board_build.filesystem = littlefs

[env:custom_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
extra_scripts = ${esp32s3_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:neopixel_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DFEATURE_ARDUINO_OTA=1
	-DFEATURE_SD=1
	-DPLUGIN_NEOPIXEL_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:custom_IR_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DPLUGIN_BUILD_CUSTOM
	-DPLUGIN_BUILD_IR
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
extra_scripts = ${esp32s3_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py
	pre:tools/pio/ir_build_check.py
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:normal_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_A_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_B_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_B_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_C_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_C_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_D_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_D_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_E_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_E_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:collection_F_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-DPLUGIN_SET_COLLECTION_F_ESP32
	-DCOLLECTION_USE_RTTTL
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:energy_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-D PLUGIN_ENERGY_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:display_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-D PLUGIN_DISPLAY_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:climate_ESP32s3_4M316k_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
build_flags = ${esp32s3_common.build_flags}
	-D PLUGIN_CLIMATE_COLLECTION
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:max_ESP32s3_16M8M_LittleFS_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_qspi
board_upload.flash_size = 16MB
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
build_flags = ${esp32s3_common.build_flags}
	-DUSE_LITTLEFS
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_BUILD_MAX_ESP32
	-DPLUGIN_BUILD_IR_EXTENDED
extra_scripts = ${esp32_common.extra_scripts}
board_build.filesystem = littlefs
board_build.partitions = esp32_partition_app4096k_spiffs8124k.csv
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:max_ESP32s3_16M8M_LittleFS_OPI_PSRAM_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_opi
board_upload.flash_size = 16MB
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
build_flags = ${esp32s3_common.build_flags}
	-DUSE_LITTLEFS
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_BUILD_MAX_ESP32
	-DPLUGIN_BUILD_IR_EXTENDED
extra_scripts = ${esp32_common.extra_scripts}
board_build.filesystem = littlefs
board_build.partitions = esp32_partition_app4096k_spiffs8124k.csv
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:custom_ESP32s3_16M8M_LittleFS_OPI_PSRAM_CDC]
extends = esp32s3_common
board = esp32s3cdc-qio_opi
board_upload.flash_size = 16MB
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
build_flags = ${esp32s3_common.build_flags}
	-DUSE_LITTLEFS
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_BUILD_CUSTOM
extra_scripts = ${esp32_common.extra_scripts}
board_build.filesystem = littlefs
board_build.partitions = esp32_partition_app4096k_spiffs8124k.csv
lib_deps = 
	h2zero/NimBLE-Arduino@^2.3.3

[debug_pio]
build_type = debug
check_tool = pvs-studio
check_flags = 
	pvs-studio: --analysis-mode=4 --errors-off=V532,V586,V795,V1042 --lic-file=../pvs_studio.lic
build_flags = ${compiler_warnings.build_flags}

[env:spec_debug_custom_ESP8266_4M1M]
extends = esp8266_4M1M
build_type = ${debug_pio.build_type}
check_tool = ${debug_pio.check_tool}
check_flags = ${debug_pio.check_flags}
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${debug_pio.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${regular_platform.lib_ignore}
	IRremoteESP8266
	HeatpumpIR
	LittleFS(esp8266)
extra_scripts = ${extra_scripts_esp8266.extra_scripts}
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:spec_debug_custom_IR_ESP8266_4M1M]
extends = esp8266_4M1M
build_type = ${debug_pio.build_type}
check_tool = ${debug_pio.check_tool}
check_flags = ${debug_pio.check_flags}
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
build_flags = ${regular_platform.build_flags}
	${debug_pio.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ESP32_ping
	ESP32WebServer
	ServoESP32
	ESP32HTTPUpdateServer
	adafruit/Adafruit GFX Library@^1.11.1
	LOLIN_EPD
	Adafruit ILI9341
	adafruit/Adafruit BusIO
	Adafruit NeoPixel
	Adafruit Motor Shield V2 Library
extra_scripts = ${extra_scripts_esp8266.extra_scripts}
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:spec_debug_beta_custom_ESP8266_4M1M]
extends = esp8266_4M1M
build_type = ${debug_pio.build_type}
check_tool = ${debug_pio.check_tool}
check_flags = ${debug_pio.check_flags}
platform = ${beta_platform.platform}
platform_packages = ${beta_platform.platform_packages}
build_flags = ${beta_platform.build_flags}
	${debug_pio.build_flags}
	${esp8266_4M1M.build_flags}
	-DPLUGIN_BUILD_CUSTOM
lib_ignore = ${regular_platform.lib_ignore}
	IRremoteESP8266
	HeatpumpIR
	SD(esp8266)
	SD
	SDFS
	LittleFS(esp8266)
extra_scripts = ${extra_scripts_esp8266.extra_scripts}
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:spec_debug_custom_ESP32_16M8M]
extends = esp32_common
build_type = ${debug_pio.build_type}
check_tool = ${debug_pio.check_tool}
check_flags = ${debug_pio.check_flags}
platform = ${esp32_common.platform}
build_flags = ${esp32_common.build_flags} ${debug_pio.build_flags}   -DPLUGIN_BUILD_CUSTOM
board = esp32_16M8M
extra_scripts = ${esp32_common.extra_scripts}
	pre:tools/pio/pre_custom_esp32.py
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:spec_debug_max_ESP32_16M8M]
extends = esp32_base
build_type = ${debug_pio.build_type}
check_tool = ${debug_pio.check_tool}
check_flags = ${debug_pio.check_flags}
lib_ignore = ${esp32_always.lib_ignore}
	ESP32_ping
build_flags = ${esp32_base.build_flags}
	${debug_pio.build_flags}
	-DESP32_CLASSIC
	-DUSE_LITTLEFS
	-DFEATURE_ARDUINO_OTA=1
	-DPLUGIN_BUILD_MAX_ESP32
	-DPLUGIN_BUILD_IR_EXTENDED
board_build.filesystem = littlefs
board = esp32_16M8M
lib_deps = marian-craciunescu/ESP32Ping@^1.7

[env:spec_memanalyze_ESP8266]
extends = esp8266_4M1M
platform = ${regular_platform.platform}
platform_packages = ${regular_platform.platform_packages}
lib_ignore = ${regular_platform.lib_ignore}
build_flags = ${esp8266_4M1M.build_flags} -DMEMORY_ANALYSIS -DPLUGIN_BUILD_CUSTOM -w -DFEATURE_NON_STANDARD_24_TASKS=1 -DTASKS_MAX=24
extra_scripts = pre:tools/pio/pre_memanalyze.py
	pre:tools/pio/generate-compiletime-defines.py
lib_deps = marian-craciunescu/ESP32Ping@^1.7
